{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","Negociacao","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","importaNegociacoes","setInterval","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","esvazia","importa","coluna","inverteOrdem","ordena","a","b","textoParaData","value","parseInt","parseFloat","focus","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { ListaNegociacoes } from '../models/ListaNegociacoes';\r\nimport { Mensagem } from '../models/Mensagem';\r\nimport { Negociacao } from '../models/Negociacao';\r\nimport { NegociacoesView } from '../views/NegociacoesView';\r\nimport { MensagemView } from '../views/MensagemView';\r\nimport { NegociacaoService } from '../services/NegociacaoService';\r\nimport { DateHelper } from '../helpers/DateHelper';\r\nimport { Bind } from '../helpers/Bind';\r\n// import {  } from '';\r\n\r\nclass NegociacaoController {\r\n\r\n  constructor() {\r\n\r\n    let $ = document.querySelector.bind(document);\r\n    this._inputData = $('#data');\r\n    this._inputQuantidade = $('#quantidade');\r\n    this._inputValor = $('#valor');\r\n\r\n    this._listaNegociacoes = new Bind(\r\n      new ListaNegociacoes(),\r\n      new NegociacoesView($('#negociacoesView')),\r\n      'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\r\n\r\n    this._mensagem = new Bind(\r\n      new Mensagem(),\r\n      new MensagemView($('#mensagemView')),\r\n      'texto');\r\n\r\n    this._ordemAtual = '';\r\n\r\n    this._service = new NegociacaoService();\r\n\r\n    // função init criada, porque é recomendado só deixar propriedades no constructor\r\n    this._init();\r\n\r\n  }\r\n\r\n  _init() {\r\n\r\n    // atualiza a lista com as negociacoes gravadas no indexedDB\r\n    this._service\r\n      .lista()\r\n      .then(negociacoes =>\r\n        negociacoes.forEach(negociacao =>\r\n          this._listaNegociacoes.adiciona(negociacao)))\r\n      .catch(erro => this._mensagem.texto = erro);\r\n\r\n    // na inicialização e a cada 3 segundos, as negociações serão atualizadas\r\n    this.importaNegociacoes();\r\n    setInterval(() => {\r\n      this.importaNegociacoes();\r\n    }, 3000);\r\n\r\n  }\r\n\r\n  adiciona(event) {\r\n    event.preventDefault();\r\n\r\n    let negociacao = this._criaNegociacao();\r\n\r\n    this._service\r\n      .cadastra(negociacao)\r\n      .then(mensagem => {\r\n        this._listaNegociacoes.adiciona(negociacao);\r\n        this._mensagem.texto = mensagem;\r\n        this._limpaFormulario();\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n\r\n  }\r\n\r\n  apaga() {\r\n\r\n    this._service\r\n      .apaga()\r\n      .then(mensagem => {\r\n        this._mensagem.texto = mensagem;\r\n        this._listaNegociacoes.esvazia();\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro)\r\n\r\n  }\r\n\r\n  importaNegociacoes() {\r\n\r\n    this._service\r\n      .importa(this._listaNegociacoes.negociacoes)\r\n      .then(negociacoes => {\r\n        negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n\r\n  ordena(coluna) {\r\n    if (this._ordemAtual == coluna) {\r\n      this._listaNegociacoes.inverteOrdem();\r\n    } else {\r\n      this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n    }\r\n    this._ordemAtual = coluna;\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    return new Negociacao(\r\n      DateHelper.textoParaData(this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value));\r\n  }\r\n\r\n  _limpaFormulario() {\r\n    this._inputData.value = \"\";\r\n    this._inputQuantidade.value = 1;\r\n    this._inputValor.value = 0;\r\n\r\n    this._inputData.focus();\r\n  }\r\n}\r\n\r\n// Desse modo, o nosso app, só terá uma instância do controller\r\n// ou seja, quando importarmos essa instância não estaríamos\r\n// criando uma nova, e sim buscando uma única\r\nlet negociacaoController = new NegociacaoController();\r\nexport function currentInstance() {\r\n  return negociacaoController;\r\n}"]}